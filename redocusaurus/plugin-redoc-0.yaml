openapi: 3.0.0
info:
  description: API Template project
  title: api-template
  version: 1.0.0
  license:
    name: ISC
    url: https://opensource.org/license/isc-license-txt/
  termsOfService: https://devlambda.com/terms/conditions
  contact:
    name: API Support
    email: support@devlambda.com
    url: http://devlambda.com/support
servers:
  - url: http://localhost:3000/
    description: Development server
paths:
  /openAPI:
    get:
      summary: API specs file
      description: Get the OpenAPI json description for this API
      tags:
        - integration
      responses:
        '200':
          description: A json containing the OpenAPI specification
  /health:
    get:
      summary: Health probe
      description: Health probe for liveness and readiness check
      tags:
        - monitoring
      responses:
        '200':
          description: Returns `ok` status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healtStatus'
              example:
                server: true
                db: true
        '500':
          description: Either the db or the server is not working as expected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healtStatus'
              examples:
                dbFail:
                  summary: the db connexion is faulty
                  value:
                    server: true
                    db: false
                serverFail:
                  summary: the api server is faulty
                  value:
                    server: false
                    db: true
                chaos:
                  summary: pure chaos
                  value:
                    server: false
                    db: false
  /license:
    get:
      summary: License
      description: Get the license of this project
      tags:
        - licence information
      responses:
        '200':
          description: This project's licence
  /licenses:
    get:
      summary: Dependencies
      description: Get the complete list of licenses used
      tags:
        - licence information
      responses:
        '200':
          description: Returns the production packages licence report
  /licenses/summary:
    get:
      summary: License types used
      description: Get a summary of dependencies per license type
      tags:
        - licence information
      responses:
        '200':
          description: Returns a dictionary of dependent packages grouped per license type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licenseSummary'
              example:
                MIT:
                  - name: '@apidevtools/openapi-schemas'
                    version: 2.1.0
                    description: >-
                      JSON Schemas for every version of the OpenAPI
                      Specification
                  - name: '@apidevtools/swagger-methods'
                    version: 3.0.2
                    description: HTTP methods that are supported by Swagger 2.0
  /wrongPath:
    get:
      summary: Not found
      description: The response given on any unknown path
      tags:
        - API
      responses:
        '404':
          description: The `not found` response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundMessage'
              example:
                message: not found
                path: /wrongPath
  /:
    get:
      summary: Base response
      description: The default `200 OK` response at the root
      tags:
        - API
      responses:
        '200':
          description: The `ok` response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
              example:
                message: ok
components:
  schemas:
    healtStatus:
      type: object
      properties:
        server:
          type: boolean
        db:
          type: boolean
    licenseSummary:
      type: object
      additionalProperties:
        type: array
        $ref: '#/components/schemas/licenceDigest'
    licenceDigest:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
    notFoundMessage:
      type: object
      properties:
        message:
          type: string
        path:
          type: string
    message:
      type: object
      properties:
        message:
          type: string
tags: []
