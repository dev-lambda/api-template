openapi: 3.0.0
info:
  description: API Template project
  title: '@dev-lambda/api-template'
  version: 1.0.0
  license:
    name: ISC
    url: https://dev-lambda.github.io/api-template/license
  termsOfService: https://dev-lambda.github.io/api-template/terms
  contact:
    name: API Support
    email: support@devlambda.com
    url: https://dev-lambda.github.io/api-template/support
servers:
  - url: /
    description: This server
tags:
  - name: Integration
    description: Integration support resources
  - name: Base
    description: Base API responses
  - name: Monitoring
    description: ' Monitoring and health check features'
externalDocs:
  description: Full documentation site
  url: https://dev-lambda.github.io/api-template/
components:
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
          description: A human readable message of the response
      required:
        - message
    NotFoundMessage:
      allOf:
        - $ref: '#/components/schemas/Message'
        - type: object
          properties:
            path:
              type: string
              description: The requested not found path
            params:
              type: object
              additionalProperties:
                nullable: true
              description: The parameters identified from the request path
          required:
            - path
            - params
    HealthReport:
      type: object
      properties:
        healthy:
          type: boolean
          description: The overall health status of the service
        report:
          type: array
          items:
            type: object
            properties:
              healthy:
                type: boolean
                description: The specific service health status
              name:
                type: string
                description: The specific service name
            required:
              - healthy
              - name
          description: A status report per sub-sevice
      required:
        - healthy
        - report
  parameters: {}
paths:
  /wrongPath:
    get:
      summary: Not found
      description: The response given on any unknown path
      tags:
        - Base
      responses:
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundMessage'
              example:
                message: not found
                path: /wrongPath
                params: {}
  /:
    get:
      summary: Base response
      description: The default `200 OK` response at the root
      tags:
        - Base
      responses:
        '200':
          description: The `ok` response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              example:
                message: ok
  /health:
    get:
      tags:
        - Monitoring
      summary: Health probe
      description: Health probe for liveness and readiness check
      responses:
        '200':
          description: Returns `ok` status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthReport'
              example:
                healthy: true
                report:
                  - name: APIServer
                    healthy: true
                  - name: Database
                    healthy: true
        '500':
          description: Either one of the required sub-services is not working as expected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthReport'
              example:
                healthy: false
                report:
                  - name: APIServer
                    healthy: true
                  - name: Database
                    healthy: false
  /openAPI:
    get:
      summary: Get the OpenAPI json description for this API
      tags:
        - Integration
      responses:
        '200':
          description: A json containing the OpenAPI specification
          content:
            application/json:
              schema:
                type: object
                properties: {}
              exemple:
                openapi: 3.0.0
                info:
                  description: API Template project
                  title: '@dev-lambda/api-template'
                  version: 1.0.0
                  license:
                    name: ISC
                    url: https://dev-lambda.github.io/api-template/license
                  termsOfService: https://dev-lambda.github.io/api-template/terms
                  contact:
                    name: API Support
                    email: support@devlambda.com
                    url: https://dev-lambda.github.io/api-template/support
                servers:
                  - url: /
                    description: This server
                tags:
                  - name: Integration
                    description: Integration support resources
                  - name: Base
                    description: Base API responses
                  - name: Monitoring
                    description: ' Monitoring and health check features'
                externalDocs:
                  description: Full documentation site
                  url: https://dev-lambda.github.io/api-template/
                components:
                  schemas:
                    Message:
                      type: object
                      properties:
                        message:
                          type: string
                          description: A human readable message of the response
                      required:
                        - message
                    NotFoundMessage:
                      allOf:
                        - $ref: '#/components/schemas/Message'
                        - type: object
                          properties:
                            path:
                              type: string
                              description: The requested not found path
                            params:
                              type: object
                              additionalProperties:
                                nullable: true
                              description: The parameters identified from the request path
                          required:
                            - path
                            - params
                    HealthReport:
                      type: object
                      properties:
                        healthy:
                          type: boolean
                          description: The overall health status of the service
                        report:
                          type: array
                          items:
                            type: object
                            properties:
                              healthy:
                                type: boolean
                                description: The specific service health status
                              name:
                                type: string
                                description: The specific service name
                            required:
                              - healthy
                              - name
                          description: A status report per sub-sevice
                      required:
                        - healthy
                        - report
                  parameters: {}
                paths:
                  /wrongPath:
                    get:
                      summary: Not found
                      description: The response given on any unknown path
                      tags:
                        - Base
                      responses:
                        '404':
                          description: Resource not found
                          content:
                            application/json:
                              schema:
                                $ref: '#/components/schemas/NotFoundMessage'
                              example:
                                message: not found
                                path: /wrongPath
                                params: {}
                  /:
                    get:
                      summary: Base response
                      description: The default `200 OK` response at the root
                      tags:
                        - Base
                      responses:
                        '200':
                          description: The `ok` response
                          content:
                            application/json:
                              schema:
                                $ref: '#/components/schemas/Message'
                              example:
                                message: ok
                  /health:
                    get:
                      tags:
                        - Monitoring
                      summary: Health probe
                      description: Health probe for liveness and readiness check
                      responses:
                        '200':
                          description: Returns `ok` status
                          content:
                            application/json:
                              schema:
                                $ref: '#/components/schemas/HealthReport'
                              example:
                                healthy: true
                                report:
                                  - name: APIServer
                                    healthy: true
                                  - name: Database
                                    healthy: true
                        '500':
                          description: >-
                            Either one of the required sub-services is not
                            working as expected
                          content:
                            application/json:
                              schema:
                                $ref: '#/components/schemas/HealthReport'
                              example:
                                healthy: false
                                report:
                                  - name: APIServer
                                    healthy: true
                                  - name: Database
                                    healthy: false
